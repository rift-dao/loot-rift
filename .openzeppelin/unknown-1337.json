{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE5f9e07c25564e985B35077F81f61B78Ac11D258",
    "txHash": "0x0eb2702aaf2bb5f2b1f8768d7111b62fc481ea83ed8a854461039c04c8c301dc"
  },
  "proxies": [
    {
      "address": "0x4Cf0BBd0BD3c6210a3Ed10362bCE09719dF49453",
      "txHash": "0xc492f04e1a536c514e1ddcc3a843e5b19affaa954f923b84fe9a63b6b1d47e05",
      "kind": "transparent"
    },
    {
      "address": "0x24832D9600759F64349DD4D9ECB6BD772FD52035",
      "txHash": "0x03bc625f0b9ac812722d24aff99490bb05a66ba17191b71d2cfd2ea79eadb4c4",
      "kind": "transparent"
    },
    {
      "address": "0x97acAE0f33dfE1C5e16588AF249AaE9BD84C3292",
      "txHash": "0xad96b2e35c37ae0e504134ecddeb0c78cdedf28273492250d92dd81358d9991a",
      "kind": "transparent"
    },
    {
      "address": "0x6F70692180aD07fb7dA99770Cc01192a3429facd",
      "txHash": "0x994b95757f93bcaad4c86d2d5a684fe634c1c58deff07df7a60ce5132c37bdab",
      "kind": "transparent"
    },
    {
      "address": "0x5f9F435C248A2f44F458fDffFd160280F14D4B70",
      "txHash": "0xbaa3ea3f9fb3b9f45b160136eddb08ae435bc20fa87d294c1b1fa369c9fd340e",
      "kind": "transparent"
    },
    {
      "address": "0xb035F07EB0E14a56695292DbDdF78A3BfCCE84d3",
      "txHash": "0x5d56d1e17bb129d455639764ee2745b2563de43dbc84ffc81b437dca79b0db46",
      "kind": "transparent"
    },
    {
      "address": "0x1eFC37566b9C0B12c770AB220A53aCE750af1B30",
      "txHash": "0x30dc7f76fd47291114ef993b0f6b2a7ad3da1c224e02a538f246d9c33b7f9bdb",
      "kind": "transparent"
    },
    {
      "address": "0xF8211eA26EFFC6875F80Ac6455fBD1B9AE0B7085",
      "txHash": "0xd853315a51b34d1aabf478cba4f85cf94b516d61db1b64912898077250574c6d",
      "kind": "transparent"
    },
    {
      "address": "0xD65983b68C2002fAD070527E35615FA4DA86736D",
      "txHash": "0x715058e9c4e56c131e34b691c822bfe10abc0b14359ded9782e5ad9fbbf5161b",
      "kind": "transparent"
    },
    {
      "address": "0x3F8246594c87371EAC09d442E6fF75435346c963",
      "txHash": "0x9c9154634d1c1ec62c64174a2c0c7a7e74df0eb0ac85d6ba43a91338b0f8420a",
      "kind": "transparent"
    },
    {
      "address": "0x515E76717a29A9D735c85043a27aD377Cec57309",
      "txHash": "0xd2df3c1068c59f3b05d024814441b5dd3b1aa37089afa16c09afc7f2903755ad",
      "kind": "transparent"
    },
    {
      "address": "0xede30219BbD7c6919c22F0e7feFe0e1CeE199790",
      "txHash": "0xc4e3abebcb48ccd382df34336cc4774d09300412a327ca3a690dea3d006ff5a8",
      "kind": "transparent"
    },
    {
      "address": "0xa9126CeA11BD46737851CB1FBE0ff941D11Fe740",
      "txHash": "0xa3bdd0aec0ec09f13477b8f14c8c78dd6c5a1acee14a7d51dbaa4981920b678b",
      "kind": "transparent"
    },
    {
      "address": "0xABf4503eE335A1da283bAc0d8567764bDA1d9994",
      "txHash": "0xd6844df7ac8496b4f24f7aafd773faac1c03c900f13ee5f373ce253bb68a21ee",
      "kind": "transparent"
    },
    {
      "address": "0x69853F5aDE9A8F6973f38F18c2FeA2f379683e7f",
      "txHash": "0xc4a0a76f3d977b0bf742c7b21663d42eb3598a0b5e3f68e2c11e1fa1494b4da4",
      "kind": "transparent"
    },
    {
      "address": "0x95F1249D61ca139edF9e7C4B53291F3bEE6D55D2",
      "txHash": "0x6cc810a0e0983bf766e05329e205e6a431d33dd84f5470b0c31ee1037b9593d8",
      "kind": "transparent"
    },
    {
      "address": "0x59815Be5528B620CAc8bA73c597a049b83179D62",
      "txHash": "0x76adde42d2ec7aca19e7b68ffb84343f0d0e1e61b4ebeb7a41285d765d9d4d2b",
      "kind": "transparent"
    },
    {
      "address": "0xA88406d8E43306B8183b86e67a4a3EE9D01C8Ce5",
      "txHash": "0xd9881f6bb54283e5d1d9535169d3a442c20b13fe1ee6a0c6f0d5fc1669fdfb90",
      "kind": "transparent"
    },
    {
      "address": "0x6cD1Ac115a08d88C1EFA6ab8F2c8dB9e131d985D",
      "txHash": "0x5c3b0f5cc6471ac1e79b6dd2846c9c25e7e7c5257b22ae168a0286dd960d9f20",
      "kind": "transparent"
    },
    {
      "address": "0x89c44777392F17D7127aEFF25cDBAaCe9fcA6B44",
      "txHash": "0x84a13dea755c72ce209cb48650cfbb957f3bf96a9d551c47ccbce87551566816",
      "kind": "transparent"
    },
    {
      "address": "0x219805319f73442A790e0976cfDAE34B576054c7",
      "txHash": "0x41130c4057856359ba77d2ff4658a9e3be031f8a50a81ba694601918588ac206",
      "kind": "transparent"
    },
    {
      "address": "0x76bA7693Deb05a9A14b96ed81Ee7DbCB83663cFB",
      "txHash": "0xa58e68a5cf198533afede98dcac206d2e417ccbdfcdf6d6e2cbf89c32b8e27d0",
      "kind": "transparent"
    },
    {
      "address": "0x091C550b7c4D43f046561FfE05A81AD3edc34d6e",
      "txHash": "0xec0930dd47057e65a205688e1cc93bd321588ddc571a0d485760090cdad588d7",
      "kind": "transparent"
    },
    {
      "address": "0x1432f67fCc38A879651AaD3a650C0D9aBca0e7dd",
      "txHash": "0x0243f967e0ea579c7c6600c148e10b6ca291e8effb48ed61c7325f763b98268e",
      "kind": "transparent"
    },
    {
      "address": "0x6EF5f39fFe61D4669930B3796Ec2D8a39afCfbD8",
      "txHash": "0x57f3c4c2412a74128d5764d6b7153c677dc9f07b38d611fbee9a0fffe1427aac",
      "kind": "transparent"
    },
    {
      "address": "0xDE14010926268D1AF64478bF53E4F033D69C2262",
      "txHash": "0xb92040a20978190098820e5e92fa8580a7f9fff3881e6363f018c2d7e717942b",
      "kind": "transparent"
    },
    {
      "address": "0xA371D524B79EB507d16417308Cb02FBBB36183A6",
      "txHash": "0x1ca5bf72096d0fa74c24fbc46f225c266bfe660bd8bf9cd460437f06d7ce4af7",
      "kind": "transparent"
    },
    {
      "address": "0xddFa0C2706ae5DAe348eEb1e929e62DE8E1B9b63",
      "txHash": "0x4af5b03f45fe964d46f5992619f95f45675312d8bd06ce16d979fc6205dd68f4",
      "kind": "transparent"
    },
    {
      "address": "0x1962969e8Bacc9A99900c48b76cA974310286113",
      "txHash": "0x8e8f8409dc092895769ab16369a04fbb736c3df8be6714df81790c57fe0de559",
      "kind": "transparent"
    },
    {
      "address": "0x8F790ec5826664d0e6c57d8Bc178231F05780A65",
      "txHash": "0xa90fe0f6f488618541e6a969900ef716629276ac4161472fddbbd430a3789bd8",
      "kind": "transparent"
    },
    {
      "address": "0xaD17950606aCdc18B56e45ea79F105A469819FAD",
      "txHash": "0xcb097fb1f035786549ef5ddbfc331fc251f78fa890751753953181522d54b6ae",
      "kind": "transparent"
    },
    {
      "address": "0x857D1d46E74D8cd3bD4AF8Fc577510b981594A02",
      "txHash": "0xa37b677bf3798c6eeb02516ca7f794448248b324714b9f65edeb15bdf6e66c7a",
      "kind": "transparent"
    },
    {
      "address": "0xEbD9b371945eb8dB38b1b7A050e5DE63a9C3f590",
      "txHash": "0xa5a7e62caa5ab2d5e433e41d532e2e1cb2c0a7d6948efc7dca46884abcf1d147",
      "kind": "transparent"
    },
    {
      "address": "0xe02d08F04019fb1E9C777AdF01a77071d0D0753b",
      "txHash": "0x87546e94e64462af9d206ee42f337da4ebb672158907908a504b8331134f5912",
      "kind": "transparent"
    },
    {
      "address": "0xe131E350d0D21a332C7C8b16340FfB9c5899005D",
      "txHash": "0x56a651752d6ca61265cb42f7f44e26463113a785170b325a2abca1435b2f19bf",
      "kind": "transparent"
    },
    {
      "address": "0x67CA27678E949CF70DA967A4B26BaBce9713d916",
      "txHash": "0x7d0fa59eb0649b8d0ff3ebc34b9e67993313ee70afa170b4c2648655a0fbcc62",
      "kind": "transparent"
    },
    {
      "address": "0x944cCEabFa3b58d91374A34932D093299D8e936c",
      "txHash": "0x5c224af4d8452f91ae6f198aca8c48bc99621345ee49a68954b7c65943f7c363",
      "kind": "transparent"
    },
    {
      "address": "0x0a6F3D9EF584f6764Ee0b74c6996C01617df1Fc8",
      "txHash": "0xfe4afbefe82449bd99656af4dea0df1979dffb31f7e9fd9bc3b69961ce61ab61",
      "kind": "transparent"
    },
    {
      "address": "0x56e526F7Df88Db1729B81298eF6c233968EaED52",
      "txHash": "0x1ca7c060a9cbf36cb452138fd33042df6a64ebfd69d32102ab31c60bc200ba3a",
      "kind": "transparent"
    },
    {
      "address": "0xB312Abf9B3754F90e093F40fd7E98BA85532F25b",
      "txHash": "0xefa60c047d91553c7d0d909dbeca71cc23d9fad8cf33801f067e919930ac2cba",
      "kind": "transparent"
    },
    {
      "address": "0xbb3eEa5BCC26479742277FaB0089badCd42B440d",
      "txHash": "0x9d5176138d6dc7c1ddf530d752d9c77d6cb8787690b9755f17b1a64145af99d5",
      "kind": "transparent"
    },
    {
      "address": "0xC9AfF3bD0B5ec7E83d8Abf9dD24b26fF06471dB1",
      "txHash": "0xde1bb4f10bb6080a26050c1710598aae397d024d14909c2bcfc34550c45c3cb7",
      "kind": "transparent"
    },
    {
      "address": "0x516e9Ec3C35B0f3d96b3209d907231eD47b34a7e",
      "txHash": "0x13faf3f717cebd19b469e2f08d21b1a48bc09fb8093ab683ba9d66332f6ca815",
      "kind": "transparent"
    },
    {
      "address": "0x29a3cf71f55e59Fc9770bE3c9D82B38D1515Ef9F",
      "txHash": "0xd07a74b1bb44fea9c4559fc8efd24f42d3ee8ebd06c6a756c0e06028dae75b3f",
      "kind": "transparent"
    },
    {
      "address": "0x73fE7225C0a76D3A5C8EFf10a774dFF81D26A22E",
      "txHash": "0x0a333165bb731dce52c157ec035075ac94f7bc36b94a85c7464132b567357e82",
      "kind": "transparent"
    },
    {
      "address": "0xF63AFa51460371a6b33181Cd204870E49B91BeC0",
      "txHash": "0x420679e6efeeac0a966c67d1f0e2e6ca748fe20da1b7bcad8329fea80036b461",
      "kind": "transparent"
    },
    {
      "address": "0xaDf91F239D0B4e7FF11FCB9d95C266C54b230bA4",
      "txHash": "0xc7604582073999313e45b447c25f4279a56feceaf6d79fb091ad9e80be893abf",
      "kind": "transparent"
    },
    {
      "address": "0x7a89C51706Faa09ec9D6C4b166c004b253b17Ea4",
      "txHash": "0xbb3a1a7919728cb2c12c88b05723d02505de7e242be8d4c2c6e896078305952b",
      "kind": "transparent"
    },
    {
      "address": "0x547F83B843c021FFD06eBDB15f718022D0c9a29d",
      "txHash": "0x585b2ea624e67a34de938edee2f496dedc9ca4dd66d23f3f7346d6dff15b41a6",
      "kind": "transparent"
    },
    {
      "address": "0x6c90c34789c841cC1a9Ba026C66D0d9E156CF150",
      "txHash": "0x00775fc35756e7f53c6ce5d20e8d9c30da0b36b68e46a609490aa954baebfd18",
      "kind": "transparent"
    },
    {
      "address": "0xd0011AE59ffBB504FD85D3D7B57b526364D8D267",
      "txHash": "0x3ca711c6404a34b404e4a76d8dad5ad3f1db6088c5ae607da9c9ca49b0658237",
      "kind": "transparent"
    },
    {
      "address": "0x91A8696DD5903813C135239caB4D644c74d69Bbf",
      "txHash": "0x47b7a57a4044f14faa0a178586dd03bc1850384c8f646ec5bea535111e64595f",
      "kind": "transparent"
    },
    {
      "address": "0xD48161fA3419eee549673a99B221AA1b442C0230",
      "txHash": "0x36969b269dad74414e94b14bdac6ccf4bcb7b2434d97bd5cd9ba7cee661184c4",
      "kind": "transparent"
    },
    {
      "address": "0xd7fBd5Af133090e4dEA1729493c63BD34FC51489",
      "txHash": "0xb7b2134d77b07220487fec63d52b1cd4c026c197ece42f4526611e06577d1570",
      "kind": "transparent"
    },
    {
      "address": "0xb4eaFB3f84a8C4B282989C1b3FF60e74F3Dd248a",
      "txHash": "0xee7cd117a244fb87f266f79cb3b90de4e9e148b48a1c3eaf5cf806c1ae041121",
      "kind": "transparent"
    },
    {
      "address": "0x2B10bD3977DE73410e6a0A94C34eB240759568Ee",
      "txHash": "0x40c7719bf2f8acc4300062ccf20e978afff72cf1aa7ee3777f05793529500e86",
      "kind": "transparent"
    },
    {
      "address": "0x7717F926418eefBcF9211fFB05b9e51d039cf968",
      "txHash": "0x258fc10bd8cf1277451111a13d28f5a9ea3fdc12390328eca7b6aca1c9184b65",
      "kind": "transparent"
    },
    {
      "address": "0x771B94C0eA06C3BfDB77fb58dD94D89EbdC4AF19",
      "txHash": "0x4e1aa98f1f52fa5a0b13b6e68d9edd92ecda37038afbde43fc783fa8641a998a",
      "kind": "transparent"
    },
    {
      "address": "0x62838b3672F96e82742d187cc76C304eDa5Defa7",
      "txHash": "0x22188210a6a3feecce38b1a5e970688acb190c50a7eef247e125327e9976c0fc",
      "kind": "transparent"
    },
    {
      "address": "0xF7219C41F6d5227c9a0986Df92c4B5dec4B7caEF",
      "txHash": "0x2eb67430fc03a15b5512c2bfe23b43948d73f7eb7e9c2f1ef37296b4abc2a077",
      "kind": "transparent"
    },
    {
      "address": "0xAF5751139dd5C3bEc8c9f3E60fCC342107E0d11B",
      "txHash": "0xdefc14b10ce69098485019ac8b2db9df0e934dff81a8e54e50c1d95ff7cc301a",
      "kind": "transparent"
    },
    {
      "address": "0xb14799755739144A71B0dbeFDBADAF0F5579e6fD",
      "txHash": "0xa68193f23d5632ac0c8d8e06bb61e647bfa5b8af879470ef7bb5da1816b8ec00",
      "kind": "transparent"
    },
    {
      "address": "0x08fe440261150d2910A5d8Bf09f460d23EEb46D0",
      "txHash": "0xae0c7bc4cf2058d8745af5da980e266bf211a41ea388a69030c26eb4bcbccab6",
      "kind": "transparent"
    },
    {
      "address": "0xaeD0cB409053C379f9570dF5126543852113131E",
      "txHash": "0xa86e2c2cdf18adad3dc8fd249c79b6e6744979c1f8061854b49725a9cda325b2",
      "kind": "transparent"
    },
    {
      "address": "0xFeed55B22e396DfdD2A72a163a092065A925FB6C",
      "txHash": "0x53bbd825528d384c777fc480b6586e08b2f691b151c962e0e6692a5ea7a0d237",
      "kind": "transparent"
    },
    {
      "address": "0x115E8eDC53f79854cE628C3659D3c10257e67a6A",
      "txHash": "0xb00078bd4ca33bb676951e1055a26daf34c283a56bcab843e53860baa10872ae",
      "kind": "transparent"
    },
    {
      "address": "0x728d6cC3aDcA4c81cb8f6B961ee36929B4DC7583",
      "txHash": "0xed32574e9bf59b5fd94774b50c70521db0648c7a5cddd65c427f365cd1fc6186",
      "kind": "transparent"
    },
    {
      "address": "0x2C36bb349E3B119634e6f0ce2B79F62f1a5Fb7A8",
      "txHash": "0x026f54d8a80868ddcfe055a72577ddcf94b316330bbc3ee8575d63810ccdab9a",
      "kind": "transparent"
    },
    {
      "address": "0x5A10dc3a28972942CF09dad55dEc4a1450E024c8",
      "txHash": "0x02b9c74ab0eee7ff5a07c1ba8c1137e7cfbafc1f650047161fdd99452cc6eb78",
      "kind": "transparent"
    },
    {
      "address": "0xC7ec6c0Ddbe9E87459Cd34D055c3f5e9bE5f2Ec4",
      "txHash": "0x3a42e9780f3a17e5151adb35ce428365005bccc0330c56041c11c0fec2d43f45",
      "kind": "transparent"
    },
    {
      "address": "0x4E78169ef3814589884791F01c679b55aAd32fD9",
      "txHash": "0xdb06a54468056381eb43eff9865227aaedb2b391d1ca5e492a29a312b28458e6",
      "kind": "transparent"
    },
    {
      "address": "0x9B986A1944798b9cB44Bf5dD45edA1D1Ca174E70",
      "txHash": "0x82727d9961941adad7b4ddf90c9ed44bbad81639ee80b8f500d694a150a33518",
      "kind": "transparent"
    },
    {
      "address": "0xe45Dd5804dbeD7004FCF9a3e5525567d1Cc0d1AB",
      "txHash": "0xb02bca83818342125a5f7b2ada7df65aca1eb95a9e68c62782e9f96b6cf4097d",
      "kind": "transparent"
    },
    {
      "address": "0x078eD2390A8BbB3225CCb7210CaC0d7C2B5d2431",
      "txHash": "0x957a45b9bad9b4a8ccd19b8a646d39ada36a29ced9f0cba3e222543154ad8d01",
      "kind": "transparent"
    },
    {
      "address": "0x651FAe6d33578C67E5CB9b5B2D3d5465eB3F826F",
      "txHash": "0xbddcf7d9e4a6305b595cb81bb6711d682063bfff0d10682c5b232c2ca54ec181",
      "kind": "transparent"
    },
    {
      "address": "0x7e3C78a333E4d7157a3Fec2465B5f9b2499493ec",
      "txHash": "0xbedd6a6b6e4e063a72c07d0ab29876e2ec3166c7e32adc5c1d981197052b6b23",
      "kind": "transparent"
    },
    {
      "address": "0x072493C0036b310a4393F92Bf92BA0a9d11CcfD1",
      "txHash": "0xe67f0942f2aea0822257ce842f41edd82cf361b96723c777cb438c45651ebd75",
      "kind": "transparent"
    },
    {
      "address": "0xf195029C02D0A0b11074f5197b11Bfef056E9419",
      "txHash": "0xb5a1f8b4ad3992fe9d2c9a3b85e97efe8c4b13acc91e5f9658b3a1f8704eaf2f",
      "kind": "transparent"
    },
    {
      "address": "0xD1E5A3cA8D84Be216edFd3C33E98a67804f8a01b",
      "txHash": "0xbe01179266c86916e69ea6410ccfa9b3b6e952ae75c60f33635d139a60557556",
      "kind": "transparent"
    },
    {
      "address": "0xFbF9283fA52e85124da3bD5F15c3d839C29ee7Ae",
      "txHash": "0xc4c3dc55be9721eade64c631f8f2703ad5764da8c7b54ef0f55aedc700045a68",
      "kind": "transparent"
    },
    {
      "address": "0x591221DDa1434901eF4536d963B25939e88f1E00",
      "txHash": "0x6a379be1786486261703c2cea059a5ce5396e6a594db0c850ff069e2218ec578",
      "kind": "transparent"
    },
    {
      "address": "0x8dDc7E0684c880da4Cf8c4960aFF9c4467a3CC0A",
      "txHash": "0x01a78e23abf796b599ba68b54393e4f265b69f22625b15968231141c0827416b",
      "kind": "transparent"
    },
    {
      "address": "0x3880C884DF0B61A736fEF8B99faaE0565D712e13",
      "txHash": "0x5e0c975d34e916094589021b0d797963f4e0f68e385d7b6a0227c18f20a1b2e0",
      "kind": "transparent"
    },
    {
      "address": "0x59424b8aa1967959C225F83FD3A63A2baD467BC7",
      "txHash": "0x3df2a88ad58fe7d5dc7c5564981b44a9388d0364116d7d8e59a413c7a45f79e5",
      "kind": "transparent"
    },
    {
      "address": "0xf3831E120489916E9AC6c90f161607444606F24a",
      "txHash": "0x6c3dd33bdcc934c612602aec5e9cf743dbf0e4d44097bde8f67747d205d4d6e4",
      "kind": "transparent"
    },
    {
      "address": "0xBD1B8557D12e7b8057684e8a114aADba007dc0F6",
      "txHash": "0x5eb274eb3db47530fb095208d3d1c25d4693735cf81441096ea8bb4088f45c03",
      "kind": "transparent"
    },
    {
      "address": "0xd9AE761736204d80922dDe8cB72273B292CbEE0A",
      "txHash": "0xa538ee637707ad35c11fa7fb212b1825960f17730aabc144f248d97ebc7824d6",
      "kind": "transparent"
    },
    {
      "address": "0x73f5e2B0786A93188471559065124130720d4C20",
      "txHash": "0x1ee94abbbca22d85ca09dc0c359d03efbf8493ade0712acf0ae74c80809ce044",
      "kind": "transparent"
    },
    {
      "address": "0xBA1FFFc412F97DE4CDfc8B04e54CD285468a3b26",
      "txHash": "0x7dc464c77064e74ec91dbdca84eb5fc1fabc5acefcb8b92b008ef639779d23c5",
      "kind": "transparent"
    },
    {
      "address": "0x05A835C62Bd880bBe0c5264e0e792e3311fB305f",
      "txHash": "0x2b1ba1a34041cfe8491e17b4426258b73e798073f2ea638d0e59360921a7d8f4",
      "kind": "transparent"
    },
    {
      "address": "0x2969bbc0793A15316a3aE81B991720Ed0e78D762",
      "txHash": "0x59ca56850b321fe89536e44fc555531224eaffd1721d121ec66c921650d50e1c",
      "kind": "transparent"
    },
    {
      "address": "0x175AF265A32d8DA8f2096ce635A12cd1C629A72D",
      "txHash": "0x544d61244fa89cdceb0fb2136e1f5762f519aae23677b2b915b6fd82671a6636",
      "kind": "transparent"
    },
    {
      "address": "0x7187d355dC4458bd13a90F6b11A2aAda7e8a59Aa",
      "txHash": "0xc8b2158c5725b6c15f17af5c0b60525dbd88bb9ffb85edbcc100a7de5033035d",
      "kind": "transparent"
    },
    {
      "address": "0x62244D80087FC4E7586348735687f8F5339BB5CC",
      "txHash": "0x79171d8915dbdeb0c6bbb23826ef7d18ae7fbe23cdabb9bd3c61b93f80965f99",
      "kind": "transparent"
    },
    {
      "address": "0x1852E0A9b66b1047AD726f5C48fC2A02a9049529",
      "txHash": "0x3de5b3b29865bf26f2b6f0a77c9c31bbf0405a1a069927f17794e999577670b1",
      "kind": "transparent"
    },
    {
      "address": "0xCa30c7F3BCBeE8EB053081567EedFfC05443AdA3",
      "txHash": "0x3eadab55be9f263a67596261c4f1e6d6d58bce7a46d82aa7b7a4620e5d52100a",
      "kind": "transparent"
    },
    {
      "address": "0x103a43D105A1d2496fe39FF3283153881B5E2C3B",
      "txHash": "0xeaedaf1609d6cfc4560a3793959f262dad8005188dc12133651cc89f99130e2d",
      "kind": "transparent"
    },
    {
      "address": "0xd9d790Ec51312A16744329685E913A6af1a0f2E4",
      "txHash": "0x5e47c2461eb240031a516a4a1f809e3416acb255abb27ad86dee333929459153",
      "kind": "transparent"
    },
    {
      "address": "0x6Fba1a24A1942C232F03DA1817c8df197DC88e0E",
      "txHash": "0xf71ada642db8c402265345cfe21114d041e851bd0cb17f6b4b57b26bed4ce096",
      "kind": "transparent"
    },
    {
      "address": "0x955aeC741884D8E69EFaC349A25B5184112b1EFd",
      "txHash": "0xe91833d2030045a656753667d67a9d506ee583ebb42401a7d2e7ba27db7ae696",
      "kind": "transparent"
    },
    {
      "address": "0xE550345902D4F1FAc79543fb1844ff07C4B7d968",
      "txHash": "0x347d1ade2c894b6b63a296d7475637f8922dbbb4399eafd67b05d6caf013b281",
      "kind": "transparent"
    },
    {
      "address": "0x55aA4b4990E208653D68C306375A325d9Fee7525",
      "txHash": "0x603e7c7799c0ba8241b812c413f640e2e28d1908a9e8a22b357aa4425be931b6",
      "kind": "transparent"
    },
    {
      "address": "0x241B0C481eE465e3b89c243C9f8CA5687a87F68D",
      "txHash": "0x6d72771b648d1eee08abb58218eb6dde8fb0d2d356ff5054d5529ce8eb924841",
      "kind": "transparent"
    },
    {
      "address": "0xCb58188c7CD9E45b3Ba3025ec6B7363a6d648739",
      "txHash": "0x4deffd22972a9a8a1ef9018c1d1da9aa53335a26ec1f0fc7febc0dc790e53f73",
      "kind": "transparent"
    },
    {
      "address": "0xCBe2d8cDD4BCef3FAb6E8079f12A92ACDDF64Bf3",
      "txHash": "0x068b25e5b530395022d4bd581659be30e48c48d8a600bc69668f1d184b946e4e",
      "kind": "transparent"
    },
    {
      "address": "0x4EA30581990234C4fD2c29DaAE60639df4b621f9",
      "txHash": "0x32b4cddebb8b31bcab40fda72794f7c7f696e446244a1d64018d6f34bbc6dc21",
      "kind": "transparent"
    },
    {
      "address": "0x76e55579CF2DE0036F62D897C4D8500247913BB2",
      "txHash": "0xf4b64188de8616e39af900c876a4b0791a43225d5f72b3c028a3c2ed035765df",
      "kind": "transparent"
    },
    {
      "address": "0x2584EedB2620F0EE160eD37a18e079504c73a7f4",
      "txHash": "0xd93ceb4e58288c38e41849ca28ce6c42b530235af8b1f0f728202b92d3552be2",
      "kind": "transparent"
    },
    {
      "address": "0x64F9b4fa2DE2cC033769f6b75d5B41C6f663fE9A",
      "txHash": "0x10adf2b765ed55ae3cd95a03305cf6ed90cfee1f0e52790b7eee5a35d0899752",
      "kind": "transparent"
    },
    {
      "address": "0x6C7531C1d26f988272345d4b1C9F7cfc359C84c0",
      "txHash": "0xf85609b692e47281beab82419120eecc483d88ea125c048d740d21a0d8477d2a",
      "kind": "transparent"
    },
    {
      "address": "0xC4D5C5bf60A3b4ABdCdfAf2fD33eA075d62AEcE3",
      "txHash": "0x59440ce2967a5df7d6e59f11e4f804313b37ed40cb58d3d8b2fe2b1930add230",
      "kind": "transparent"
    },
    {
      "address": "0xf2C69364f6672feaf9B480dDc537516DAd8635aD",
      "txHash": "0x6e6c426f2745bf5167e83183c4f63e2a2a4cf123f60b4e408648e3f5eac6a31e",
      "kind": "transparent"
    },
    {
      "address": "0x5499196f2D5f08866BF8a3C54026499b4472c9aE",
      "txHash": "0x743130538c80986b6523f2b55d4dc93a1f2f97dadba873ace6e6dc7dfca08b39",
      "kind": "transparent"
    },
    {
      "address": "0x4D4C9541aB863f923a460CE9439F50Ccbd949523",
      "txHash": "0xf08d8209fe4aa5bc7da26555ba15932fef79b6436fce4f0132483270a68ca51f",
      "kind": "transparent"
    },
    {
      "address": "0x9A39145E4C95D475b7c27C7A49685E1722827C0C",
      "txHash": "0x5ca8651a282a7b5eb4cd9ad16daa2bf55fc5d7eb3b0745a3dcae1b974e58abbc",
      "kind": "transparent"
    },
    {
      "address": "0x0B14ae2C3cCc33bd3caE5d3EeE99F83337EDACD1",
      "txHash": "0x73b801f7474a6cb83074ec3aaf9faafa1998ca11ff282c32f64edeb160a6a4ca",
      "kind": "transparent"
    },
    {
      "address": "0x881C295a3510b2a519C9C4c4c5Cb40659c40dFA3",
      "txHash": "0x70c0fe132e88a14e7cd3e0025fe85f5627db129434ad7dc4f18da76d187c6cde",
      "kind": "transparent"
    },
    {
      "address": "0x491b93b095620658DfC26136b109C1D862C8067F",
      "txHash": "0x80a3ccce72bd940c09c74d621f12f6d759a1e6dc3a31379d0fd22af4e1bf5fb9",
      "kind": "transparent"
    },
    {
      "address": "0x9228F7d526aBbb89CB8972831b07950BA2D1F579",
      "txHash": "0xf82b47bfdd694b1aee4afdb5c9bf80c8aa5240aa659b4dad73f35496b738ccbd",
      "kind": "transparent"
    },
    {
      "address": "0x4222DE0268e2Ad5345B4a1CE390535bc1DE87FE5",
      "txHash": "0x64ecb4a69f45d4661cc2db60639064271151697b72570af5ac74408bead85f2e",
      "kind": "transparent"
    },
    {
      "address": "0xC7AaD7A4De41bfB566C6F644DC35A09322ea40cb",
      "txHash": "0x0588563c40550b0a94f61b7bb12d69e136d55edf49a08b15637310501f0b092f",
      "kind": "transparent"
    },
    {
      "address": "0x7d8286C6FaB698dae52C92C607b63a5F61496A49",
      "txHash": "0xa70193818b7cf9a51e21b285d5dd091564fc9344283802eeb6756ca5412fd3d9",
      "kind": "transparent"
    },
    {
      "address": "0x62bE6B88e667eAD73Ea4a41d35FA6DBd268D53BD",
      "txHash": "0x0418bb0ef18b64ba50d607ed84866b119b92f931ecca54d70289580a3f15606f",
      "kind": "transparent"
    },
    {
      "address": "0x632678bBa8a4DD16255F164e9d74853BeA9856E7",
      "txHash": "0x1e381d46a1460e5cbb2f7297561831582828fc40d03b05f78b3ff7f3db6d3826",
      "kind": "transparent"
    },
    {
      "address": "0x3051162ED7DeF8Af730Aaf4C7cB8a10Ee19b8303",
      "txHash": "0x8f45ec007053009287309e5c30cb90dbde6aecda7610f8edd9b0158297978947",
      "kind": "transparent"
    },
    {
      "address": "0x290a1a360F64758D1b46F994E541ac9b7aE5c830",
      "txHash": "0xe9f3892ae2f0d630d20990e260b4ca405ba0cbba567423943df20e56d54e9895",
      "kind": "transparent"
    },
    {
      "address": "0xe4018a8d0a10Ed53B43151Afb7e11e4e35d974dE",
      "txHash": "0x00850c3468a608ed7562e9b3988d6a16483788d10b64f455677a461ec5cdd0dc",
      "kind": "transparent"
    },
    {
      "address": "0xaC7658D824B1A198E6489FD73636B1eE502FB25A",
      "txHash": "0x21d3a9324344360d3432a561260c0068152541bf43bf43a0446dbb41026e1d6b",
      "kind": "transparent"
    },
    {
      "address": "0xc93346ff8db3157C1A74BEd49d4778A888ea6f0c",
      "txHash": "0xe36ba73eafacc4a64b4f7fd73c0cff5937a257ccd538c48e17156ea09075ae64",
      "kind": "transparent"
    },
    {
      "address": "0x771660917e5C74C95ff89CAd5Ba64f23A6E11d1E",
      "txHash": "0xdedf9c6e68bf79c60e67116e23503d5f4339770dbfc5fb20cb87b172c5852f15",
      "kind": "transparent"
    },
    {
      "address": "0x762306A55Ca913CFA90630f0a3d12D6bCDFAC921",
      "txHash": "0x25d0f3e7268ee32a547092ce0d1d53462b96def99d12020fa2415e39b1979edf",
      "kind": "transparent"
    },
    {
      "address": "0xEa00A4f0ED111e1575a4b50d820B2dC9F01F2FD5",
      "txHash": "0x32180fd49f57f5e064dd9a79579ab598f2a462ebd648bf9465d290894e7c2f19",
      "kind": "transparent"
    },
    {
      "address": "0x69e1bf8D0E27f0934e30f27437d889128EdaEd4F",
      "txHash": "0xa7d5ed05452edddc2ff41ecb6dc6f62db125c86c63091c5729ca2ba4d842fca8",
      "kind": "transparent"
    },
    {
      "address": "0xF4D472a848ed1Bc7492E60a4CDeCf7d70093C4Ec",
      "txHash": "0x7dfdbce12850fcd033eb60206ed9c802a441cda65684de2db013e7271fa20b4d",
      "kind": "transparent"
    },
    {
      "address": "0xA1c93e9F4175Ff226Fe1EF5b4aaAda99123082b7",
      "txHash": "0x14f41783c030c9513dd6c4b07b6138a32f78e2495117a21019db65e18eafc664",
      "kind": "transparent"
    },
    {
      "address": "0xE2Cd16B900d9745A67448B2Ca5D8C46bF0A05437",
      "txHash": "0x4e9b120d8210eeddd3660bad60309cd1042d1971c58df771eb3e52331ce77e2a",
      "kind": "transparent"
    },
    {
      "address": "0x45956e2b73261088fbfA66e467514985bd8A8B62",
      "txHash": "0xea5a1895948c2b3f52ba96e8a5c67f7a2b389e1b6621c8c8e0b33910508dc6c3",
      "kind": "transparent"
    },
    {
      "address": "0x75f5e79275e6AC7598d2a278b6a13F8B69002542",
      "txHash": "0x6803d07a240f1066dd97bb8ce600977195559b836b572ed8f30c5497d91ac1bd",
      "kind": "transparent"
    },
    {
      "address": "0x99cFAD2804dFda4A9caC859779F1483d7350A643",
      "txHash": "0xaf87ade5718a0115beadf8c815074ad2bf98c8813ba0d72270c3b8ed7a4490b1",
      "kind": "transparent"
    },
    {
      "address": "0x171033CEf37bCEaAbf16674d53E8AfE0268BD7eC",
      "txHash": "0xb683a47898222ef98184f17b124d489a3764a236a07545015e37fbbd0596826e",
      "kind": "transparent"
    },
    {
      "address": "0x7BFbAEa64821AA39827f3F1ad36DCB9465803704",
      "txHash": "0xc8812e00a3f7e9c4799464c48d2e1fcf18c777e7fb5efadd362e07de2af17921",
      "kind": "transparent"
    },
    {
      "address": "0x479F8bB221C6B755638D6021342704c60E40d90d",
      "txHash": "0x0e1c26c7c51cf2cf82012a70dae2b9994d24f0b58915fe02e4fdb7189db71302",
      "kind": "transparent"
    },
    {
      "address": "0xC41018dDF403487E9e5AFDbF4b8edA6B4AE6bbc7",
      "txHash": "0x8dcca12874b57ffc51775ebbd1ae3c437038dc06f531c64630f9c751d8c71dea",
      "kind": "transparent"
    },
    {
      "address": "0x9b563C581587C2d6dbe8146F2a586E685E10A484",
      "txHash": "0x0327765b98422ba931336691f085a97f5a624c1e03685c67bfed49546129067c",
      "kind": "transparent"
    },
    {
      "address": "0x7CBF75e247Fb74adEd8D051B4B7eB89749B178Dc",
      "txHash": "0x680c2a8c803e3ffcb5640284ddbae9a93996f81245901f4c35e916846657c055",
      "kind": "transparent"
    },
    {
      "address": "0xc6a0cF04047Cf3f25760aA0EAf4D10Eb5D03E028",
      "txHash": "0xb7516dbe78bd27017a81c58dd05ba4bffb430e62644e756cec7f9074117ef0cb",
      "kind": "transparent"
    },
    {
      "address": "0xF7C8E5B0c611Ca7A4155B046fA825818978A5bB6",
      "txHash": "0x311a0402695cfa4c0302c8a954b17623088c38b16c39d398f5a06a6ba881ee6e",
      "kind": "transparent"
    },
    {
      "address": "0xB622D1dF545FCAA80bd3f97CEC498cb6D3401444",
      "txHash": "0x0033b84adb260340dbbfdd6fb83a5ec8e4b0a91adadb1f1068e8fe0fd7f34876",
      "kind": "transparent"
    },
    {
      "address": "0xB2C82F7D81CC65c7c6E8bD6F93929FCf283132D7",
      "txHash": "0xceb2375413600f46a1b5b8bb47703bec0ab522a0f7e219967e9f80aa69456e53",
      "kind": "transparent"
    },
    {
      "address": "0xf626873BFA52eD87abF7239e9d6EF360c2d0F823",
      "txHash": "0xa895d490a8ea15c745b1fc7c9ebdab016509593fbc777722c85f1b3168ccada9",
      "kind": "transparent"
    },
    {
      "address": "0xF228b00FfFEa0Ab218412aFE138A29096d28eF0F",
      "txHash": "0x4e60f920bbe6ee1d35e610310a72f35788e44a8d79d13e34974365b19b6bf434",
      "kind": "transparent"
    },
    {
      "address": "0xCEf28796279Fb40659EDbc7298F3796039312682",
      "txHash": "0x5b216c052a8316ce86c0c632b80b002bb4b064e4664834e1bdb673d2e8d40f5f",
      "kind": "transparent"
    },
    {
      "address": "0x6bbb813F934CE8ba687d6c0161D69F48d554cE24",
      "txHash": "0x840df0b0b62029f7e62ec89c4f43b11e8192a09203cc95f5902c94eb4e02bf96",
      "kind": "transparent"
    },
    {
      "address": "0xA249D1CBE699AbB074E7ebDE2cceD92Fed27e2c7",
      "txHash": "0x084dee4e7ee45abaa2a91429dbd3db86a2deadf7043c41936b14592e9308bf72",
      "kind": "transparent"
    },
    {
      "address": "0x6e0A6989D86770418af11f799252D9Cab31B684D",
      "txHash": "0x8dc0450af0374c3d80afc37e370dc45e61ef4aecf9fd712a113d08ddf00ec398",
      "kind": "transparent"
    },
    {
      "address": "0xbE90900fB232aDf23fad9828354f8e165753289e",
      "txHash": "0xb22063203bc1c0717f690841d4603b0e8328ec604e1958ae75a3debd9a839a59",
      "kind": "transparent"
    },
    {
      "address": "0xA4C61302CE292693D9226193A0d4B5d9CeEAF3f8",
      "txHash": "0x19639d838618596278eb74f046c80b08c79f1190abd55f85e6b80e6dc94a4183",
      "kind": "transparent"
    },
    {
      "address": "0x0C5E6054de7bAe72905d9AF7dCd90b7cA7fa52a8",
      "txHash": "0x9f9a59b7dd56f9d6ec2b83c531910b30f3f31bc8a2e3a4215b52e02d5e424f63",
      "kind": "transparent"
    },
    {
      "address": "0x1FF9855d234c9e84189F2e8ac8325Ae40682BC6B",
      "txHash": "0x5b4cdcc088d9518a85eb70df33c88bc7ba5edb2ff07f9da240dea11742e4ddf5",
      "kind": "transparent"
    },
    {
      "address": "0x49C99c28Fd5fB022E219a8Af4664b9B1875B4C88",
      "txHash": "0x5a17fd9378018ccb4e48a3e20ee954188828c6f60e4c55e62a9d813113535280",
      "kind": "transparent"
    },
    {
      "address": "0xC6811310cA3D61150aD35ef24a256004aBF785f0",
      "txHash": "0x992b24e3bae32e839adaa296dff5bbf237fde7b60faf286e4ab353d01dd4bf10",
      "kind": "transparent"
    },
    {
      "address": "0x58C9CC6802FDC07C2E80Fa0d96e50c5A01C1f4ca",
      "txHash": "0xd5d18a1c9bf38ad2468b7486b7c96ae8d941f160b15d38b52b0da0329c508bff",
      "kind": "transparent"
    },
    {
      "address": "0xdC7092Ec1DB852b9438625e81C26215bD2a2A9dC",
      "txHash": "0xd2a305c50295d5fe2ac39ed7cdb07d4ed6d39774d571f6996057c5f0a11eace2",
      "kind": "transparent"
    },
    {
      "address": "0xDb39372525E185834b37be82f0d4Bdb84369F2C0",
      "txHash": "0xc3fd790a71363ad71967d493310c469a916173615dab1445c649f63f0b592897",
      "kind": "transparent"
    },
    {
      "address": "0x1A9B6dC00CF5FeB3C38E3De7485865D2B6E97B8e",
      "txHash": "0xfb2c3ff240594c9321896bd736a452c02691305e8d67e14a28b8cd3298315df1",
      "kind": "transparent"
    },
    {
      "address": "0xe0951599B3F16c0F20fABD5b92C3154815dcc523",
      "txHash": "0x1610eba0909ae4245c76a54e33707cadaf0551ebaea12eeb191b0e91e340993f",
      "kind": "transparent"
    },
    {
      "address": "0x1eDC0C36BA25218aBEc41DB7027baEC01828a916",
      "txHash": "0x6fc768c4f86532731a75e4781c3708322f2a3368a37c9d84d3dad483914a702c",
      "kind": "transparent"
    },
    {
      "address": "0x6E61F77A2EA751e9e4a5c94FD88Fa1F7b2d0C1BB",
      "txHash": "0x8b500bb323d2ff908775d66eef7eaed8630d939ac7c8149c4df3fb49d560941e",
      "kind": "transparent"
    },
    {
      "address": "0x510EaD3c3cd0cC763194471Cbd3D97bBCb92d083",
      "txHash": "0x305d7039567841a11e8a3b74b43360d3e018ade8bb1efa4df887ef1349e7765b",
      "kind": "transparent"
    },
    {
      "address": "0x1A2d38b5b0903a50e49651FF00D99C892436CF8a",
      "txHash": "0x7a3f4ed697cbbeaa6954a39449ac39be2c244d231924abf044f252d020341b4f",
      "kind": "transparent"
    },
    {
      "address": "0xCCF20D419F8255981B8C6b959045465000A44c6e",
      "txHash": "0x86e0c4ea8f9226e025a69a0a126e1a827d6ea87c1bdbbb12bcd0c114210606c8",
      "kind": "transparent"
    },
    {
      "address": "0xC9aF8F1BA5B23104dA1FAbD08D17E6Bfcd12A1ae",
      "txHash": "0xb01a64dd1ca9ae60f84c250e5d5da13014174cf5a3b3df87cffe8d57aeea4d48",
      "kind": "transparent"
    },
    {
      "address": "0x53C122666e63edc13Bf75f60fEE9feb509F4C8Ba",
      "txHash": "0x1fd22a7966f4aa6c08381dd59ddb9485f538248a7238e776faa1d8040d3bcb80",
      "kind": "transparent"
    },
    {
      "address": "0xEed2C2Ee94ea38715D41F4d19745201B337A52AD",
      "txHash": "0x1e173722ab713aed3b08b541a8f977aa458be0a9273c0391157ef678cba09137",
      "kind": "transparent"
    },
    {
      "address": "0xeF2AD79e2e5484f25C84900938f0750Eb2fb76Bf",
      "txHash": "0x3d1dbf274dc471406ed17b632b1627c0cda8f10e284c10ab8e4ac67d1d1512b4",
      "kind": "transparent"
    },
    {
      "address": "0xFFE9100f22E81ecBAdccfCBBD009fA422b277F0E",
      "txHash": "0xed95259b2f46fca2b92ca6aa73f219cd05b397de3384f3e24065ba4b7c9f773a",
      "kind": "transparent"
    },
    {
      "address": "0x408F1bA92Ee8c21a0db530d5F241E0C9e17E6Ee2",
      "txHash": "0x302257bfd23d7e5ac2e1a85fc46bca570e79f3d606adc788d1abde862b2f4ba4",
      "kind": "transparent"
    },
    {
      "address": "0xC38A05b6314f7a043C359974bEBcCA37957F0F56",
      "txHash": "0x6614afd5962b43b8a9340c11b42ec578571ae071544662604b7e90f8478073be",
      "kind": "transparent"
    },
    {
      "address": "0xf3deaac9c6f320340dE85C6E3c377F50d2A62720",
      "txHash": "0x906c2521de22ad59b5cc0e45a6d1390c637195964b1a139931388145e3e895a9",
      "kind": "transparent"
    },
    {
      "address": "0x52Bf597Fb6cf1865990f0C45611b4CB83758996E",
      "txHash": "0x18d6cb2d4cbef1afc55ea762ffd34bccca3f1b021ecf0c93709af965b3ce9bec",
      "kind": "transparent"
    },
    {
      "address": "0xa036A7821bE969b24b68020F26107498c2c06A15",
      "txHash": "0x6a7a8f588f9a2babdf99ff4e962ed40666d976101211b8eec8dc288cdcfc0f17",
      "kind": "transparent"
    },
    {
      "address": "0xAA32eA3E5AE2c7860dea35919C6aa16ea3855a4D",
      "txHash": "0x1c6332e6f6ebd1ee27a955cfdb665bb390091e10411596bf05af813966933a66",
      "kind": "transparent"
    },
    {
      "address": "0xCb6772dbaec2f70a419D557b3082FefffeCe1ec0",
      "txHash": "0x0e0c7be0662399d5348b35128573146fc1cac13ef590626304483e70da336cb0",
      "kind": "transparent"
    },
    {
      "address": "0xB1E0a5989b56058De8E5Bb92e1e89492E31d17B2",
      "txHash": "0xf79840eb0cfdf5ef62b084c2402a38fa8af1606fb832638331d6fdd303dc3c50",
      "kind": "transparent"
    },
    {
      "address": "0x032c6DBebE41fC0874DD70613d0B185919A6831A",
      "txHash": "0x578ad6b9a384fdc52d9e99c50a5b8a62d8c5b595ede0ee65375d75686b4e7478",
      "kind": "transparent"
    },
    {
      "address": "0xe8b134D3c31B392650FAB89111eB34D7c6a78dA3",
      "txHash": "0xf51d4191d3c6062f6f196ec51e2c3af94fcd15de28bbce5645e7d0bd8ca305f0",
      "kind": "transparent"
    },
    {
      "address": "0x6443b71b62536D1647F0c858981C14adC2D200fe",
      "txHash": "0xb7207ed77a88101530ce95701a0bad1dfe735b8e55191042928a1b97ad2c5c09",
      "kind": "transparent"
    },
    {
      "address": "0xCdCfAdA7A12ad3486d1111845B66BCBA6Fc445bF",
      "txHash": "0x659212e5988c209cdb96095c87db72534d648125e021cff7dcb8f1ab7f21a443",
      "kind": "transparent"
    },
    {
      "address": "0xF0a5E96fcCe0ce7236730963F2d2A1Bab41ea983",
      "txHash": "0x2026ea761b38cee155032e7a80f9600f0ca5220900c5a38c01959c0ac8c73856",
      "kind": "transparent"
    },
    {
      "address": "0xC6beF3D311f0336640441881450020523Dd74BB6",
      "txHash": "0x3acbff1be22c069e191ba5bb014c999f6f7f97857699de881d16d4cce2afad7a",
      "kind": "transparent"
    },
    {
      "address": "0x1054e7F22F93B0DE81B7CcaaE6660c348b8Dadbd",
      "txHash": "0x5b069158823a2f0d9b1921783e0c6afe2d8c74d1dce69b838d2533cdd25bcc2f",
      "kind": "transparent"
    },
    {
      "address": "0x481205B381128F72b57534b8a30A3b3393e375f8",
      "txHash": "0xc44416a22599786c9dc2844c7c3e10e27b28f27be5823fb3f672905e5a117b87",
      "kind": "transparent"
    },
    {
      "address": "0xFaAB5A4ebd9595C972812C35c4CdE5c0FC71729a",
      "txHash": "0x64bc71d325f21b9a53351f8ca5f41a06ba8ecef9cbd7be831b1782a0fe77f653",
      "kind": "transparent"
    },
    {
      "address": "0x7e7cA8436b5BB48d44C9F409328B40A27E9a1FdA",
      "txHash": "0x2db7057a46a0d5930156dfce11c13d9668224aa194a2a82a217452e4b1c9f331",
      "kind": "transparent"
    },
    {
      "address": "0x4F9422134883F1e6419BE746e57aE533c2cf2947",
      "txHash": "0xdb52024e6d3b1683c5b860c33584ea2980c5f68132b8267342a65a1a98f020bb",
      "kind": "transparent"
    },
    {
      "address": "0x4b1142D641EF1fe1F67879F88b8f53C4250b4b18",
      "txHash": "0xa6f1398882932789e5aa6cb68761f520c8c363b4764a275561fb4a35e8564188",
      "kind": "transparent"
    },
    {
      "address": "0xB1F2cF172B299ca3C7672F33661F5bC39E05a2A8",
      "txHash": "0x98657a0f581a3c46af66c20cf8121b17666f896883143f24971e605be06e2f4f",
      "kind": "transparent"
    },
    {
      "address": "0x21771AB38D3C3E7D3b511E269cf42ed6E1A6666A",
      "txHash": "0x519090aebb6ad094db2aeacc94c10861564ab7e92c4158ab5caef51a8e51c58d",
      "kind": "transparent"
    },
    {
      "address": "0xB5a60d6b40089621C1bc05F42ac52Be79Ba4ff00",
      "txHash": "0xbce53c77f889fb1e68460868c974b74786f42cf63101e104cc585db44e1169dc",
      "kind": "transparent"
    },
    {
      "address": "0x544C268CA922635cb8fd15EE4b4B72530788c04A",
      "txHash": "0xa6379c015fcdd71a3ce69c95b5f74fc7f5eca7ba5e3bdc3ec591396ddf5e4d17",
      "kind": "transparent"
    },
    {
      "address": "0x46d2e08ed52Afde231e6130d2e2a57BaC1887588",
      "txHash": "0x7e83f2cfb587b81b810d2ef767028e4091b67253be5bb64ef6e0127abf11aa0c",
      "kind": "transparent"
    },
    {
      "address": "0x109a156a26dE3f59EF360593B0aCBea17F88E7dF",
      "txHash": "0xa27fcffdda04e41ab97da6d5e3b69f74f6b4e89fc1effb771d741015a82b6e4b",
      "kind": "transparent"
    },
    {
      "address": "0x9F33CE19A6900A12DE1593cE984e849899B9495E",
      "txHash": "0x868e7cca65db5aacc4f599dac2c0893c64cd71d58b28fd1c9a70e2942747bf8e",
      "kind": "transparent"
    },
    {
      "address": "0x2a090D778208EB0aD38C3F9254C3A958372901Ec",
      "txHash": "0x6a6acb8660905fe8620f79bbe3a2a8bbfa019b12554df9621e30fb6af59072a2",
      "kind": "transparent"
    },
    {
      "address": "0xcdFF87f9F16567AE179363FFf546150689F793a7",
      "txHash": "0x66b1572a0a5f891d22a89df15c528d0d294db9f6b4b303d0561c4487914b380a",
      "kind": "transparent"
    },
    {
      "address": "0xC9F5A92E2344F9D872e089A302031Fa7e4ac5aC9",
      "txHash": "0xdf3f00ba4141aa965901ea71bd3778811de1a5abd56369dbad20ab9570ee5b43",
      "kind": "transparent"
    },
    {
      "address": "0x53A4e644614E9f5Ae1cDA6136311BAaa7d8072f3",
      "txHash": "0xae8a02b0d061aa736ac8dd3c50313ccf5a2b8f44e4c7b387cdbd837a970cebd2",
      "kind": "transparent"
    },
    {
      "address": "0x6be1b3D9eC57C891CBcA59bB19DfD9E0e5eAa113",
      "txHash": "0x1abc82dc217a623693139ab0f8d72fa78612119304c18df6a80630cf3f9e54a4",
      "kind": "transparent"
    },
    {
      "address": "0xB2bDdf77BBE741aeF8E27Db976158a927119B4d3",
      "txHash": "0x41a5351f5f4470839adb7f82d1357178687e9e8a6d7ea84e5819b900b139f206",
      "kind": "transparent"
    },
    {
      "address": "0xFD7D07CBba8Bf8c73cB237EC9710719B976E6a97",
      "txHash": "0x746e066b5626c2de3da4df5c7aba2767372e94f0e570767f05940e37b6161957",
      "kind": "transparent"
    },
    {
      "address": "0x08623c64a657E7fFeFdD85E916aa2d162f62c3BE",
      "txHash": "0x1bb9a3137dc9d264bc50db97bfb8c192f9bf9664a33f4cc285c00ab788bfca5e",
      "kind": "transparent"
    },
    {
      "address": "0x6B106e94b857002E7b4dbb176f04B7889874E1e3",
      "txHash": "0xb9825fa07a0991ac9c52285f469bec581ca40144e082e2091d50f56425170e89",
      "kind": "transparent"
    },
    {
      "address": "0x11b1d57203Bff24012B15bDc9ea7C1a0939BAbf4",
      "txHash": "0x38abc8053ac2ec974fda8bcba905cecd2ef9115763bdf9702b8f2ce18bc862bf",
      "kind": "transparent"
    },
    {
      "address": "0x462879d918eEFf75Fa7d7Ba9938AFdEFdf55b6E8",
      "txHash": "0x7b124761211029e8f551c7b433fadbfdb3eeddc0d7c4259cebb9cc871c529c6c",
      "kind": "transparent"
    },
    {
      "address": "0xc219147105e00991C00f8bA361e538B07739d87A",
      "txHash": "0x48cc7a6fffaad7cdaddeb38058533f70c039697fe466f384410742e1050a8182",
      "kind": "transparent"
    },
    {
      "address": "0x420A20DC146614eAd13E4100a0f800B413501599",
      "txHash": "0x54446c878820062957caaa00f75c2e0b945b3fc16a4454579ed1528d080f0480",
      "kind": "transparent"
    }
  ],
  "impls": {
    "02a6b3e3750e2bb892f8d3bb6be15cc69530955b148b29755f1adc23fb435ee2": {
      "address": "0xC27527d731Ea2DCF19c1a2d557D79Ec8274b47b2",
      "txHash": "0xd633c668526ae9fa6101a64439933bb775fd60117480afd8c6420b47f0a7e0f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RiftData",
            "label": "riftControllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/RiftData.sol:98"
          },
          {
            "contract": "RiftData",
            "label": "karmaTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:99"
          },
          {
            "contract": "RiftData",
            "label": "karmaHolders",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:99"
          },
          {
            "contract": "RiftData",
            "label": "_bags",
            "type": "t_mapping(t_uint256,t_struct(RiftBag)12286_storage)",
            "src": "../project:/contracts/RiftData.sol:101"
          },
          {
            "contract": "RiftData",
            "label": "karma",
            "type": "t_mapping(t_address,t_uint64)",
            "src": "../project:/contracts/RiftData.sol:104"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(RiftBag)12286_storage)": {
            "label": "mapping(uint256 => struct RiftBag)"
          },
          "t_struct(RiftBag)12286_storage": {
            "label": "struct RiftBag",
            "members": [
              {
                "label": "charges",
                "type": "t_uint16"
              },
              {
                "label": "chargesUsed",
                "type": "t_uint32"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "xp",
                "type": "t_uint32"
              },
              {
                "label": "lastChargePurchase",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint64)": {
            "label": "mapping(address => uint64)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3538a96d647e2816a5af4999e2c467e388dbe3692ccd71fa1c42138fc33d7e9": {
      "address": "0x516dD6e35d4ce2bD13581a075fcD3B9658Da677d",
      "txHash": "0x18d8f2774ded8346333d2523e44390e74a5452bdaa7cbb99820ad9385b222d4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(ERC721)4182",
            "src": "../project:/contracts/Rift.sol:54"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(ERC721)4182",
            "src": "../project:/contracts/Rift.sol:54"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(ERC721)4182",
            "src": "../project:/contracts/Rift.sol:56"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)10969",
            "src": "../project:/contracts/Rift.sol:56"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)12361",
            "src": "../project:/contracts/Rift.sol:57"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:60"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:62"
          },
          {
            "contract": "Rift",
            "label": "riftTier",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:62"
          },
          {
            "contract": "Rift",
            "label": "riftTierPower",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:63"
          },
          {
            "contract": "Rift",
            "label": "riftTierSize",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:64"
          },
          {
            "contract": "Rift",
            "label": "riftTierIncrease",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:65"
          },
          {
            "contract": "Rift",
            "label": "riftPowerPerLevel",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:68"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:69"
          },
          {
            "contract": "Rift",
            "label": "xpRequired",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:77"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:78"
          }
        ],
        "types": {
          "t_contract(ERC721)4182": {
            "label": "contract ERC721"
          },
          "t_contract(IMana)10969": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)12361": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1221b0340e1d4da1e6f113be0ea7996559ed35f761ece8f91106ea8ab29886a": {
      "address": "0x8d25d30819bD7ECe085287aBe36613D2467c2554",
      "txHash": "0xcb99e24e3dcd2eaa21eb205ba227a4e3a8c8798ec23e5b78c6dcb4c4a94c3e1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RiftData",
            "label": "riftControllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/RiftData.sol:100"
          },
          {
            "contract": "RiftData",
            "label": "karmaTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "karmaHolders",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "_bags",
            "type": "t_mapping(t_uint256,t_struct(RiftBag)11868_storage)",
            "src": "../project:/contracts/RiftData.sol:104"
          },
          {
            "contract": "RiftData",
            "label": "karma",
            "type": "t_mapping(t_address,t_uint64)",
            "src": "../project:/contracts/RiftData.sol:104"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(RiftBag)11868_storage)": {
            "label": "mapping(uint256 => struct RiftBag)"
          },
          "t_struct(RiftBag)11868_storage": {
            "label": "struct RiftBag",
            "members": [
              {
                "label": "charges",
                "type": "t_uint16"
              },
              {
                "label": "chargesUsed",
                "type": "t_uint32"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "xp",
                "type": "t_uint32"
              },
              {
                "label": "lastChargePurchase",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint64)": {
            "label": "mapping(address => uint64)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7d99aab50910f8e5157f8e0892ea8a38aa739db9b9cffcd9173e915f20472b7b": {
      "address": "0x457da70C29D1fFA4D7Ed1c04A9791be55A90212A",
      "txHash": "0x7b27c6b83c54050d85bb5862369935bbebd88d48a349aec8179380f86e3dcc4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RiftData",
            "label": "riftControllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/RiftData.sol:102"
          },
          {
            "contract": "RiftData",
            "label": "karmaTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "karmaHolders",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "_bags",
            "type": "t_mapping(t_uint256,t_struct(RiftBag)10237_storage)",
            "src": "../project:/contracts/RiftData.sol:104"
          },
          {
            "contract": "RiftData",
            "label": "karma",
            "type": "t_mapping(t_address,t_uint64)",
            "src": "../project:/contracts/RiftData.sol:107"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(RiftBag)10237_storage)": {
            "label": "mapping(uint256 => struct RiftBag)"
          },
          "t_struct(RiftBag)10237_storage": {
            "label": "struct RiftBag",
            "members": [
              {
                "label": "charges",
                "type": "t_uint16"
              },
              {
                "label": "chargesUsed",
                "type": "t_uint32"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "xp",
                "type": "t_uint32"
              },
              {
                "label": "lastChargePurchase",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint64)": {
            "label": "mapping(address => uint64)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b13031aa7182e037d6d477e71f1f81b0d0ec868460e852c5ceeef578e58b034b": {
      "address": "0xD5ec03b026e67A51A5E20fDE90C132818181a928",
      "txHash": "0x4200be6541a97847fbb15aaa381185476244e1d950b692ff9e7a78592874edbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)3901",
            "src": "../project:/contracts/Rift.sol:54"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)3901",
            "src": "../project:/contracts/Rift.sol:54"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)3901",
            "src": "../project:/contracts/Rift.sol:56"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)8785",
            "src": "../project:/contracts/Rift.sol:56"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10312",
            "src": "../project:/contracts/Rift.sol:57"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:60"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:62"
          },
          {
            "contract": "Rift",
            "label": "riftTier",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:62"
          },
          {
            "contract": "Rift",
            "label": "riftTierPower",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:63"
          },
          {
            "contract": "Rift",
            "label": "riftTierSize",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:64"
          },
          {
            "contract": "Rift",
            "label": "riftTierIncrease",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:65"
          },
          {
            "contract": "Rift",
            "label": "riftPowerPerLevel",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:67"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:69"
          },
          {
            "contract": "Rift",
            "label": "xpRequired",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:77"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:78"
          }
        ],
        "types": {
          "t_contract(IERC721)3901": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)8785": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10312": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e26a1524277a94ec4adcd7c2f6e90182b9e64c74c68ab88f54f9a9a09eadc84b": {
      "address": "0xaacBcb35F1D8B6F0F2769e146174365b228Ebe99",
      "txHash": "0x71261af3a7b25eb75673c2a85687620c9a3e6120b0b79caab4a1edf8f1b4733e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9479",
            "src": "../project:/contracts/Crystals.sol:44"
          },
          {
            "contract": "Crystals",
            "label": "iCalculator",
            "type": "t_contract(ICrystalManaCalculator)9471",
            "src": "../project:/contracts/Crystals.sol:45"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9443",
            "src": "../project:/contracts/Crystals.sol:47"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)9332",
            "src": "../project:/contracts/Crystals.sol:48"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:49"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:51"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:55"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:57"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:58"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "../project:/contracts/Crystals.sol:59"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9463_storage)",
            "src": "../project:/contracts/Crystals.sol:62"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9450_storage)",
            "src": "../project:/contracts/Crystals.sol:63"
          },
          {
            "contract": "Crystals",
            "label": "openSeaProxyRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:65"
          },
          {
            "contract": "Crystals",
            "label": "isOpenSeaProxyActive",
            "type": "t_bool",
            "src": "../project:/contracts/Crystals.sol:66"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9479": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(ICrystalManaCalculator)9471": {
            "label": "contract ICrystalManaCalculator"
          },
          "t_contract(IMana)9443": {
            "label": "contract IMana"
          },
          "t_contract(IRift)9332": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9463_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9463_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint8"
              },
              {
                "label": "levelManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9450_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9450_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "102d4dff3f425867274ff070c295e272df7d746d16de77d1ce79697133b219f4": {
      "address": "0x0Ea4B84f610C543a3C8821FD2b98689C60C6e5c9",
      "txHash": "0x4d966a6efb0efa8bdfe5f9ab161530f2deb7bd6b80261ad5aff72c3a1d1a533e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9134",
            "src": "../project:/contracts/Crystals.sol:43"
          },
          {
            "contract": "Crystals",
            "label": "iCalculator",
            "type": "t_contract(ICrystalManaCalculator)9126",
            "src": "../project:/contracts/Crystals.sol:44"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9098",
            "src": "../project:/contracts/Crystals.sol:46"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)8987",
            "src": "../project:/contracts/Crystals.sol:47"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:48"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:50"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:54"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:56"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:57"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "../project:/contracts/Crystals.sol:58"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9118_storage)",
            "src": "../project:/contracts/Crystals.sol:61"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9105_storage)",
            "src": "../project:/contracts/Crystals.sol:62"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9134": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(ICrystalManaCalculator)9126": {
            "label": "contract ICrystalManaCalculator"
          },
          "t_contract(IMana)9098": {
            "label": "contract IMana"
          },
          "t_contract(IRift)8987": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9118_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9118_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint8"
              },
              {
                "label": "levelManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9105_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9105_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "700e533af487307a5fa65d16126a45cc387a4dc61a0651cbf13c7a316ac8f6b1": {
      "address": "0x677008c95b7090fdBa0f780945eB6468f87E043c",
      "txHash": "0xbdd641de546496dbfa7d63233015cd37a9875d87f9fb9d9b60c7db8f096e6acc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9140",
            "src": "../project:/contracts/Crystals.sol:43"
          },
          {
            "contract": "Crystals",
            "label": "iCalculator",
            "type": "t_contract(ICrystalManaCalculator)9132",
            "src": "../project:/contracts/Crystals.sol:44"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9104",
            "src": "../project:/contracts/Crystals.sol:46"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)8993",
            "src": "../project:/contracts/Crystals.sol:47"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:48"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:50"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:54"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:56"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:57"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "../project:/contracts/Crystals.sol:58"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9124_storage)",
            "src": "../project:/contracts/Crystals.sol:61"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9111_storage)",
            "src": "../project:/contracts/Crystals.sol:62"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9140": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(ICrystalManaCalculator)9132": {
            "label": "contract ICrystalManaCalculator"
          },
          "t_contract(IMana)9104": {
            "label": "contract IMana"
          },
          "t_contract(IRift)8993": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9124_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9124_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint8"
              },
              {
                "label": "levelManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9111_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9111_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "dd052efeec641c245ad16bbf3513d1f1ae6d53ac9f57d93fd8cfa0882d5fc1b1": {
      "address": "0x994AFDbbdAC14f4A12CF1eC8DC86562640f68269",
      "txHash": "0x37ea4075a65cc449da83dd56a2937b4f4e47aae3606e624d90f629c7d77ea964",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9201",
            "src": "../project:/contracts/Crystals.sol:43"
          },
          {
            "contract": "Crystals",
            "label": "iCalculator",
            "type": "t_contract(ICrystalManaCalculator)9193",
            "src": "../project:/contracts/Crystals.sol:44"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9165",
            "src": "../project:/contracts/Crystals.sol:46"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)9054",
            "src": "../project:/contracts/Crystals.sol:47"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:48"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:50"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:54"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:56"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:57"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "../project:/contracts/Crystals.sol:58"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9185_storage)",
            "src": "../project:/contracts/Crystals.sol:61"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9172_storage)",
            "src": "../project:/contracts/Crystals.sol:62"
          },
          {
            "contract": "Crystals",
            "label": "openSeaProxyRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:64"
          },
          {
            "contract": "Crystals",
            "label": "isOpenSeaProxyActive",
            "type": "t_bool",
            "src": "../project:/contracts/Crystals.sol:65"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9201": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(ICrystalManaCalculator)9193": {
            "label": "contract ICrystalManaCalculator"
          },
          "t_contract(IMana)9165": {
            "label": "contract IMana"
          },
          "t_contract(IRift)9054": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9185_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9185_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint8"
              },
              {
                "label": "levelManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9172_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9172_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d3b892191227325aa13118bf6e8ac176b3f06075b5f9191523d456f6f3d720e4": {
      "address": "0x2055C1A897c1A744397Fc3a1842920ea82dE05c7",
      "txHash": "0x9b08a14b45168ff1981bdc87b10c04ab1d5ec42f3aba2b5d6dac979a2d65bcff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9115",
            "src": "../project:/contracts/Crystals.sol:43"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9087",
            "src": "../project:/contracts/Crystals.sol:45"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)8976",
            "src": "../project:/contracts/Crystals.sol:46"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:47"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:49"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:53"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:55"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:56"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)dyn_storage",
            "src": "../project:/contracts/Crystals.sol:57"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9107_storage)",
            "src": "../project:/contracts/Crystals.sol:60"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9094_storage)",
            "src": "../project:/contracts/Crystals.sol:61"
          },
          {
            "contract": "Crystals",
            "label": "openSeaProxyRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:63"
          },
          {
            "contract": "Crystals",
            "label": "isOpenSeaProxyActive",
            "type": "t_bool",
            "src": "../project:/contracts/Crystals.sol:64"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9115": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(IMana)9087": {
            "label": "contract IMana"
          },
          "t_contract(IRift)8976": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9107_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9107_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint8"
              },
              {
                "label": "levelManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9094_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9094_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d950a081a8b04f019fa1361d374e64dd0741dbbc26b25cfb42527bfab4dcf702": {
      "address": "0xfEE83C6E1D346770c6f374919512A1B6865A84C4",
      "txHash": "0x11e657e257112bb1a2d7d6f022aa8204ab29cbd92ceea7bc95b0d860686a9259",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RiftData",
            "label": "riftControllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/RiftData.sol:102"
          },
          {
            "contract": "RiftData",
            "label": "karmaTotal",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "karmaHolders",
            "type": "t_uint256",
            "src": "../project:/contracts/RiftData.sol:103"
          },
          {
            "contract": "RiftData",
            "label": "_bags",
            "type": "t_mapping(t_uint256,t_struct(RiftBag)10675_storage)",
            "src": "../project:/contracts/RiftData.sol:104"
          },
          {
            "contract": "RiftData",
            "label": "karma",
            "type": "t_mapping(t_address,t_uint64)",
            "src": "../project:/contracts/RiftData.sol:107"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(RiftBag)10675_storage)": {
            "label": "mapping(uint256 => struct RiftBag)"
          },
          "t_struct(RiftBag)10675_storage": {
            "label": "struct RiftBag",
            "members": [
              {
                "label": "charges",
                "type": "t_uint16"
              },
              {
                "label": "chargesUsed",
                "type": "t_uint32"
              },
              {
                "label": "level",
                "type": "t_uint16"
              },
              {
                "label": "xp",
                "type": "t_uint64"
              },
              {
                "label": "lastChargePurchase",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_address,t_uint64)": {
            "label": "mapping(address => uint64)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "81df4100c3acfa280dde64ec4fd32afba187be1d2b9bbbeaca4371934d20fb3d": {
      "address": "0xdABAE15599376e5dC54fb4ccC8a6031877E5FA61",
      "txHash": "0xd9701a2da049c489148ea44e5e5e4a5719eb8238b2dccc562039321a1f0850df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "Crystals",
            "label": "iMetadata",
            "type": "t_contract(ICrystalsMetadata)9045",
            "src": "../project:/contracts/Crystals.sol:66"
          },
          {
            "contract": "Crystals",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Crystals.sol:68"
          },
          {
            "contract": "Crystals",
            "label": "iRift",
            "type": "t_contract(IRift)8981",
            "src": "../project:/contracts/Crystals.sol:69"
          },
          {
            "contract": "Crystals",
            "label": "riftAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:70"
          },
          {
            "contract": "Crystals",
            "label": "mintedCrystals",
            "type": "t_uint64",
            "src": "../project:/contracts/Crystals.sol:75"
          },
          {
            "contract": "Crystals",
            "label": "maxFocus",
            "type": "t_uint8",
            "src": "../project:/contracts/Crystals.sol:77"
          },
          {
            "contract": "Crystals",
            "label": "mintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:78"
          },
          {
            "contract": "Crystals",
            "label": "mMintFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Crystals.sol:79"
          },
          {
            "contract": "Crystals",
            "label": "xpTable",
            "type": "t_array(t_uint16)10_storage",
            "src": "../project:/contracts/Crystals.sol:80"
          },
          {
            "contract": "Crystals",
            "label": "crystalsMap",
            "type": "t_mapping(t_uint256,t_struct(Crystal)9037_storage)",
            "src": "../project:/contracts/Crystals.sol:83"
          },
          {
            "contract": "Crystals",
            "label": "bags",
            "type": "t_mapping(t_uint256,t_struct(Bag)9024_storage)",
            "src": "../project:/contracts/Crystals.sol:84"
          },
          {
            "contract": "Crystals",
            "label": "openSeaProxyRegistryAddress",
            "type": "t_address",
            "src": "../project:/contracts/Crystals.sol:86"
          },
          {
            "contract": "Crystals",
            "label": "isOpenSeaProxyActive",
            "type": "t_bool",
            "src": "../project:/contracts/Crystals.sol:87"
          }
        ],
        "types": {
          "t_contract(ICrystalsMetadata)9045": {
            "label": "contract ICrystalsMetadata"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRift)8981": {
            "label": "contract IRift"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint16)10_storage": {
            "label": "uint16[10]"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_struct(Crystal)9037_storage)": {
            "label": "mapping(uint256 => struct Crystal)"
          },
          "t_struct(Crystal)9037_storage": {
            "label": "struct Crystal",
            "members": [
              {
                "label": "attunement",
                "type": "t_uint16"
              },
              {
                "label": "lastClaim",
                "type": "t_uint64"
              },
              {
                "label": "focus",
                "type": "t_uint16"
              },
              {
                "label": "focusManaProduced",
                "type": "t_uint32"
              },
              {
                "label": "regNum",
                "type": "t_uint32"
              },
              {
                "label": "lvlClaims",
                "type": "t_uint16"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(Bag)9024_storage)": {
            "label": "mapping(uint256 => struct Bag)"
          },
          "t_struct(Bag)9024_storage": {
            "label": "struct Bag",
            "members": [
              {
                "label": "totalManaProduced",
                "type": "t_uint64"
              },
              {
                "label": "mintCount",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "9d81c93e998e17bbf61445e275e081e291f40a3c475fe505b0211af188165b69": {
      "address": "0x68d686CD8C27bf83e7Bb0EB0EfB2322d21c4dC03",
      "txHash": "0x4aa46f0879f1147e476714ce71d3b97ba91c4c3fd95a177265fe75587317a067",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:60"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:61"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:62"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9083",
            "src": "../project:/contracts/Rift.sol:63"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10726",
            "src": "../project:/contracts/Rift.sol:64"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:67"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:76"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:76"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:76"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:79"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:82"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:83"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:88"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:91"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9083": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10726": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "befcc38638956934d2a0451ababd3a486664f06159d561965af10655551f54e3": {
      "address": "0x85E744F5C13b9A637De329B99aaf7Ab1CC34fA46",
      "txHash": "0x12fd9a3c9c333258882e2b1ebdad0f865de049064a307458777b1aa9e4040fac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10750",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:92"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:94"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:98"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:100"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:103"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10750": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74eda6fcdec71a37c5e7d11a6d80769011ee2ad134d7fdb6843698db02132e59": {
      "address": "0x3938644B0378cFBaA98EFC96d7d9320fF8FcDfe4",
      "txHash": "0xa370d4b5661f154599f23e1ecaf7d8a1657f91bdfd9fa5d2c80e7355fb3d0f78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10741",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:92"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:94"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:98"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:100"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:103"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10741": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1d5a6ddfbf8fe8ebab61fb177e5b3d6124e16d923b4cbe787b60ac9d61f9773a": {
      "address": "0x24d70055D761D14E8997E6D2ecA941358Cc0BE60",
      "txHash": "0x04e0c1dfd8ae29cc5eac0692275da66270836b219f6a82dc9101d81a49d4ac96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10697",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:92"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:94"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:98"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:100"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:103"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10697": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00c4f948090243e32f005b8816c1034419233ab5f247e84caa2cb355796b047f": {
      "address": "0xa7855Ab86527eb84F143170C2d635eF62f06a80f",
      "txHash": "0xf2bb5d9ff7500c4c82b9fe39ce73aad0b95507b0b6726c9cfbbd1950cf471fc3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10744",
            "src": "../project:/contracts/Rift.sol:76"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:79"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:88"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:91"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:93"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:96"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:99"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:102"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:105"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10744": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8c0fb2a39ec48a365d58b89c46a6bb6e387e5b4abb9dbf14d667fa7115f61857": {
      "address": "0x346C791baB53aCeD1e072b4772F075CEafe2e928",
      "txHash": "0xd827cf0ad4d0d5360fea23bdd87601cd770b6e77a70617e6adffb93aee5febfe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10760",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:92"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:94"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:98"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:100"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:103"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10760": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b47f1ba709c11d7202dfd39d388542bf92e86b9436540c98d23b7ea176d7ae83": {
      "address": "0xE51F4F3eA4084469d556bF2004603F1a725ED4D2",
      "txHash": "0x555a9ab0aa93c14dd125763a57e984884d83a4c8048d0b580c253c9cbf64c603",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Rift",
            "label": "iLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:71"
          },
          {
            "contract": "Rift",
            "label": "iMLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:72"
          },
          {
            "contract": "Rift",
            "label": "iGLoot",
            "type": "t_contract(IERC721)4298",
            "src": "../project:/contracts/Rift.sol:73"
          },
          {
            "contract": "Rift",
            "label": "iMana",
            "type": "t_contract(IMana)9017",
            "src": "../project:/contracts/Rift.sol:74"
          },
          {
            "contract": "Rift",
            "label": "iRiftData",
            "type": "t_contract(IRiftData)10760",
            "src": "../project:/contracts/Rift.sol:75"
          },
          {
            "contract": "Rift",
            "label": "description",
            "type": "t_string_storage",
            "src": "../project:/contracts/Rift.sol:78"
          },
          {
            "contract": "Rift",
            "label": "riftLevel",
            "type": "t_uint32",
            "src": "../project:/contracts/Rift.sol:85"
          },
          {
            "contract": "Rift",
            "label": "riftPower",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:86"
          },
          {
            "contract": "Rift",
            "label": "riftLevelIncreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:87"
          },
          {
            "contract": "Rift",
            "label": "riftLevelDecreasePercentage",
            "type": "t_uint8",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMinThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:89"
          },
          {
            "contract": "Rift",
            "label": "riftLevelMaxThreshold",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:90"
          },
          {
            "contract": "Rift",
            "label": "riftCallibratedTime",
            "type": "t_uint256",
            "src": "../project:/contracts/Rift.sol:92"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsSacrificed",
            "type": "t_uint64",
            "src": "../project:/contracts/Rift.sol:94"
          },
          {
            "contract": "Rift",
            "label": "levelChargeAward",
            "type": "t_mapping(t_uint16,t_uint16)",
            "src": "../project:/contracts/Rift.sol:95"
          },
          {
            "contract": "Rift",
            "label": "riftObjects",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:98"
          },
          {
            "contract": "Rift",
            "label": "riftQuests",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/Rift.sol:100"
          },
          {
            "contract": "Rift",
            "label": "staticBurnObjects",
            "type": "t_mapping(t_address,t_struct(BurnableObject)8993_storage)",
            "src": "../project:/contracts/Rift.sol:101"
          },
          {
            "contract": "Rift",
            "label": "riftObjectsArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:103"
          },
          {
            "contract": "Rift",
            "label": "staticBurnableArr",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Rift.sol:104"
          }
        ],
        "types": {
          "t_contract(IERC721)4298": {
            "label": "contract IERC721"
          },
          "t_contract(IMana)9017": {
            "label": "contract IMana"
          },
          "t_contract(IRiftData)10760": {
            "label": "contract IRiftData"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint16,t_uint16)": {
            "label": "mapping(uint16 => uint16)"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(BurnableObject)8993_storage)": {
            "label": "mapping(address => struct BurnableObject)"
          },
          "t_struct(BurnableObject)8993_storage": {
            "label": "struct BurnableObject",
            "members": [
              {
                "label": "power",
                "type": "t_uint64"
              },
              {
                "label": "mana",
                "type": "t_uint32"
              },
              {
                "label": "xp",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
